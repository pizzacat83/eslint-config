name: Post Snapshot to Pull Request

on:
  workflow_run:
    workflows: ["Build Snapshot"]
    types: [completed]

jobs:
  compose:
    name: Compose comment

    runs-on: ubuntu-latest

    outputs:
      comment: ${{ steps.comment.outputs.result }}

    permissions:
      contents: none

    if: >
      ${{ github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Prepare temporary directory
        run: |
          tmpdir="$(mktemp -d)"
          echo ::set-output name=TMPDIR::$tmpdir
        id: tmpdir

      - name: 'Download artifact'
        uses: actions/github-script@v5.1.0
        env:
          GA_TMPDIR_PATH: ${{ steps.tmpdir.outputs.TMPDIR }}
          GA_WORKFLOW_RUN_ID: ${{ github.event.workflow_run.id }}
        with:
          # https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
          script: |
            var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: process.env.GA_WORKFLOW_RUN_ID,
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "snapshots"
            })[0];
            var download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            var path = require('path');
            fs.writeFileSync(path.join(process.env.GA_TMPDIR_PATH, 'snapshots.zip'), Buffer.from(download.data));

      - run: unzip "$GA_TMPDIR_PATH/snapshots.zip" -d "$GA_TMPDIR_PATH/snapshots"
        env:
          GA_TMPDIR_PATH: ${{ steps.tmpdir.outputs.TMPDIR }}

      - name: Compose comment
        id: comment
        uses: actions/github-script@v5.1.0
        env:
          GA_TMPDIR_PATH: ${{ steps.tmpdir.outputs.TMPDIR }}
        with:
          result-encoding: string
          script: |
            const { promises: fs } = require('fs');
            const path = require('path');

            const readFile = async (file) => {
              return await fs.readFile(
                path.join(process.env.GA_TMPDIR_PATH, 'snapshots', file),
                { encoding: 'utf-8' },
              );
            };

            const diffSummary = await readFile('diff-summary.txt');
            const diffComplete = await readFile('diff-complete.diff');

            const backquotes = '`'.repeat(
              Math.max(
                3,
                [diffSummary, diffComplete]
                  .flatMap(s => s.match(/`+/g) || [])
                  .map(s => s.length)
                  .reduce((a,b) => Math.max(a,b), 0)
                  + 1,
              )
            );

            return diffSummary === '' ?
              'Resolved config did not change.' :
            `
            Resolved config changed.

            ${ backquotes }
            ${ diffSummary }
            ${ backquotes }

            <details>
            <summary>diff</summary>

            ${ backquotes }diff
            ${ diffComplete }
            ${ backquotes }

            </details>
            `;

  post:
    name: Post comment

    runs-on: ubuntu-latest

    needs: [ compose ]

    permissions:
      pull-requests: write

    steps:
      - uses: marocchino/sticky-pull-request-comment@b015005e3fd26a04ddada902a666dd1cb3c3972b
        with:
          header: snapshots
          message: ${{ needs.compose.outputs.comment }}
          number: ${{ github.event.workflow_run.pull_requests[0].number }}
